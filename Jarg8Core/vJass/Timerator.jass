library Timeration requires General, ColorVectors

	struct countdown 
		timer 	dial 	= null
		integer count	= 0
		integer account = 0
		integer tick 	= 0
		integer alarm 	= 0

		integer hid 		= 0
		boolean onRepeat 	= false
		real 	period 		= 0.

		method destroy takes nothing returns nothing
			call FlushChildHashtable( HT, this.hid )
			call DestroyTimer		( this.dial )
			
			set this.dial 		= null
			set this.count 		= 0
			set this.account 	= 0
			set this.tick		= 0
			set this.alarm		= 0
			set this.hid 		= 0
			
			call this.deallocate()
		endmethod

		method refresh takes nothing returns nothing
			set this.count 		= 0
			set this.account 	= 0
			set this.tick		= 0
			set this.alarm		= 0
		endmethod

		method launch takes real inv, boolean isRepeat, code src returns nothing
			set this.period 	= inv
			set this.onRepeat 	= isRepeat

			call TimerStart( this.dial, inv, isRepeat, src )
		endmethod

		method putData takes integer data returns nothing
			call SaveInteger( HT, this.hid, 0, data )
		endmethod

		method putDataTo takes integer addr, integer data returns nothing
			if addr > 0 then
				call SaveInteger( HT, this.hid, addr, data )
			endif
		endmethod

		method getDataFrom takes integer addr returns integer
			return LoadInteger( HT, this.hid, addr )
		endmethod


		method getData takes nothing returns integer
			return LoadInteger( HT, this.hid, 0 )
		endmethod
		
		static method getDataFromExpired takes nothing returns integer
			return LoadInteger( HT, GetHandleId(GetExpiredTimer()), 0 )
		endmethod

		method pause takes nothing returns nothing
			call PauseTimer(this.dial)
		endmethod

		method resume takes nothing  returns nothing
			call ResumeTimer(this.dial)
		endmethod

		method restart takes code src returns nothing
			call TimerStart( this.dial, this.period, this.onRepeat, src )
		endmethod

		method push takes integer data, real inv, code src returns nothing
			local boolean 	isRepeat = inv > 0.
			local real 		period	 =  inv * ( 1.0 - B2R(not isRepeat) * 2.0 )

			set this.period 	= period
			set this.onRepeat 	= isRepeat
			if data == -1 then
				call SaveInteger( HT, this.hid, 0, this )
			else
				call SaveInteger( HT, this.hid, 0, data )
			endif
			call TimerStart	( this.dial, inv, isRepeat, src )
		endmethod

		static method create takes nothing returns thistype
			local thistype this = thistype.allocate()
			set this.dial = CreateTimer()
			set this.hid  = GetHandleId(this.dial)
			return this
		endmethod
	endstruct

	struct limb
		timerdialog dial 		= null
		countdown 	clock 		= 0
		string 		label 		= null
		rgba 		color 		= 0
		rgba 		color2 		= 0
		boolean 	ownClock 	= false

		method destroy takes nothing returns nothing
			if this.ownClock then
				call this.clock.pause()
				call this.clock.destroy()
			endif
			set this.dial 		= null
			set this.clock 		= 0
			set this.label 		= null
			set this.color 		= 0
			set this.color2 	= 0
			set this.ownClock 	= false
		endmethod

		method operator title takes nothing returns string
			return this.label
		endmethod

		method operator title= takes string str returns nothing
			set this.label = str
			call TimerDialogSetTitle( this.dial, this.label )
		endmethod

		method operator colorTitle  takes nothing returns rgba
			return this.color
		endmethod

		method operator colorTitle= takes rgba vcl returns nothing
			set this.color = vcl
			call TimerDialogSetTitleColor( this.dial, vcl.red, vcl.green, vcl.blue, vcl.alpha )
		endmethod

		method operator colorTime  takes nothing returns rgba
			return this.color2
		endmethod

		method operator colorTime= takes rgba vcl returns nothing 
			set this.color2 = vcl
			call TimerDialogSetTimeColor( this.dial, vcl.red, vcl.green, vcl.blue, vcl.alpha )
		endmethod

		method mfSpeed takes real mfs returns nothing
			call TimerDialogSetSpeed( this.dial, mfs )
		endmethod

		method rtRemaining takes real rmng returns nothing
			call TimerDialogSetRealTimeRemaining( this.dial, rmng)
		endmethod

		method show takes boolean b returns nothing
			call TimerDialogDisplay( this.dial, b )
		endmethod

		method showForPlayer takes boolean b, player p returns nothing
			if GetLocalPlayer() == p then
				call TimerDialogDisplay( this.dial, b )
			endif
		endmethod

		static method create takes countdown ct returns thistype
			local thistype this = thistype.allocate()
			if ct < 0 then
				set this.clock 		= countdown.create()
				set this.ownClock 	= true
			else
				set this.clock = ct
			endif
			set this.dial = CreateTimerDialog( this.clock.dial )
			set this.title = "Tik-Tak"
			return this
		endmethod
	endstruct
endlibrary
